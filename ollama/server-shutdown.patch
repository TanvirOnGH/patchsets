--- a/llm/llama.cpp/examples/server/server.cpp
+++ b/llm/llama.cpp/examples/server/server.cpp
@@ -28,6 +28,7 @@
 #include <chrono>
 #include <condition_variable>
 #include <atomic>
+#include <signal.h>

 using json = nlohmann::json;

@@ -2394,7 +2395,10 @@
     }
 }

-int main(int argc, char **argv)
+std::function<void(int)> shutdown_handler;
+inline void signal_handler(int signal) { shutdown_handler(signal); }
+
+int __main(int argc, char **argv)
 {
 #if SERVER_VERBOSE != 1
     log_disable();
@@ -2954,8 +2958,14 @@
         std::placeholders::_2,
         std::placeholders::_3
     ));
-    llama.queue_tasks.start_loop();

+    shutdown_handler = [&](int) {
+        llama.queue_tasks.terminate();
+    };
+    signal(SIGTERM, signal_handler);
+    signal(SIGINT, signal_handler);
+    llama.queue_tasks.start_loop();
+    svr.stop();
     t.join();

     llama_backend_free();
